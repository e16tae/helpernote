name: CI - Continuous Integration

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - main
      - develop

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  backend-test:
    name: Backend Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_USER: helpernote
          POSTGRES_PASSWORD: ${{ github.run_id }}
          POSTGRES_DB: helpernote_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust toolchain with caching
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
          cache: true
          cache-workspaces: backend

      - name: Run rustfmt check
        working-directory: ./backend
        run: cargo fmt -- --check

      - name: Run clippy
        working-directory: ./backend
        env:
          SQLX_OFFLINE: true
        run: cargo clippy -- -D warnings

      - name: Run tests
        working-directory: ./backend
        env:
          DATABASE_URL: postgresql://helpernote:${{ github.run_id }}@localhost:5432/helpernote_test
          SQLX_OFFLINE: true
        run: cargo test --verbose

  frontend-test:
    name: Frontend Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run linter
        working-directory: ./frontend
        run: npm run lint

      - name: Run type check
        working-directory: ./frontend
        run: npm run type-check

      - name: Run unit tests
        working-directory: ./frontend
        run: npm run test -- --runInBand
