# Production Environment Variables Example
# DO NOT commit actual production values to git
# Set these in your deployment environment (Kubernetes secrets, Docker compose, etc.)

#==============================================================================
# BACKEND ENVIRONMENT VARIABLES
#==============================================================================

# Database Configuration
DATABASE_URL=postgres://username:password@postgres-service:5432/helpernote

# JWT Configuration
# IMPORTANT: Generate a strong secret key for production
# Example: openssl rand -base64 32
JWT_SECRET=your-production-secret-key-here
JWT_EXPIRATION=3600
COOKIE_DOMAIN=.helpernote.my

# Server Configuration
PORT=8000
RUST_LOG=info

# MinIO/S3 Configuration
MINIO_ENDPOINT=http://minio-service:9000
# Or use AWS S3: https://s3.amazonaws.com
MINIO_ACCESS_KEY=production-access-key
MINIO_SECRET_KEY=production-secret-key
MINIO_BUCKET=helpernote-prod

#==============================================================================
# FRONTEND ENVIRONMENT VARIABLES
#==============================================================================

# API Configuration
# This MUST match your backend domain
NEXT_PUBLIC_API_URL=https://api.helpernote.my

#==============================================================================
# DEPLOYMENT NOTES
#==============================================================================

# Kubernetes Secret Example:
# kubectl create secret generic helpernote-backend-secrets \
#   --from-literal=DATABASE_URL='postgres://...' \
#   --from-literal=JWT_SECRET='...' \
#   --from-literal=MINIO_ACCESS_KEY='...' \
#   --from-literal=MINIO_SECRET_KEY='...'

# Docker Compose Example:
# environment:
#   - DATABASE_URL=${DATABASE_URL}
#   - JWT_SECRET=${JWT_SECRET}
#   - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
#   - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}

# GitHub Actions Example:
# - name: Build frontend
#   env:
#     NEXT_PUBLIC_API_URL: ${{ secrets.API_URL }}
